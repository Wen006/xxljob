DROP TABLE QRTZ_BLOB_TRIGGERS;
CREATE TABLE QRTZ_BLOB_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, BLOB_DATA BLOB, PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));
DROP TABLE QRTZ_CALENDARS;
CREATE TABLE QRTZ_CALENDARS (SCHED_NAME VARCHAR2(120) NOT NULL, CALENDAR_NAME VARCHAR2(200) NOT NULL, CALENDAR BLOB NOT NULL, PRIMARY KEY (SCHED_NAME, CALENDAR_NAME));
DROP TABLE QRTZ_CRON_TRIGGERS;
CREATE TABLE QRTZ_CRON_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, CRON_EXPRESSION VARCHAR2(200) NOT NULL, TIME_ZONE_ID VARCHAR2(80), PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));
DROP TABLE QRTZ_FIRED_TRIGGERS;
CREATE TABLE QRTZ_FIRED_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, ENTRY_ID VARCHAR2(95) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, INSTANCE_NAME VARCHAR2(200) NOT NULL, FIRED_TIME NUMBER(18) NOT NULL, SCHED_TIME NUMBER(18) NOT NULL, PRIORITY INTEGER NOT NULL, STATE VARCHAR2(16) NOT NULL, JOB_NAME VARCHAR2(200), JOB_GROUP VARCHAR2(200), IS_NONCONCURRENT VARCHAR2(1), REQUESTS_RECOVERY VARCHAR2(1), PRIMARY KEY (SCHED_NAME, ENTRY_ID));
DROP TABLE QRTZ_JOB_DETAILS;
CREATE TABLE QRTZ_JOB_DETAILS (SCHED_NAME VARCHAR2(120) NOT NULL, JOB_NAME VARCHAR2(200) NOT NULL, JOB_GROUP VARCHAR2(200) NOT NULL, DESCRIPTION VARCHAR2(250), JOB_CLASS_NAME VARCHAR2(250) NOT NULL, IS_DURABLE VARCHAR2(1) NOT NULL, IS_NONCONCURRENT VARCHAR2(1) NOT NULL, IS_UPDATE_DATA VARCHAR2(1) NOT NULL, REQUESTS_RECOVERY VARCHAR2(1) NOT NULL, JOB_DATA BLOB, PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP));
DROP TABLE QRTZ_LOCKS;
CREATE TABLE QRTZ_LOCKS (SCHED_NAME VARCHAR2(120) NOT NULL, LOCK_NAME VARCHAR2(40) NOT NULL, PRIMARY KEY (SCHED_NAME, LOCK_NAME));
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP));
DROP TABLE QRTZ_SCHEDULER_STATE;
CREATE TABLE QRTZ_SCHEDULER_STATE (SCHED_NAME VARCHAR2(120) NOT NULL, INSTANCE_NAME VARCHAR2(200) NOT NULL, LAST_CHECKIN_TIME NUMBER(18) NOT NULL, CHECKIN_INTERVAL NUMBER(18) NOT NULL, PRIMARY KEY (SCHED_NAME, INSTANCE_NAME));
DROP TABLE QRTZ_SIMPLE_TRIGGERS;
CREATE TABLE QRTZ_SIMPLE_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, REPEAT_COUNT NUMBER(7) NOT NULL, REPEAT_INTERVAL NUMBER(12) NOT NULL, TIMES_TRIGGERED NUMBER(10) NOT NULL, PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));
DROP TABLE QRTZ_SIMPROP_TRIGGERS;
CREATE TABLE QRTZ_SIMPROP_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, STR_PROP_1 VARCHAR2(512), STR_PROP_2 VARCHAR2(512), STR_PROP_3 VARCHAR2(512), INT_PROP_1 INTEGER, INT_PROP_2 INTEGER, LONG_PROP_1 NUMBER, LONG_PROP_2 NUMBER, DEC_PROP_1 NUMBER(13,4), DEC_PROP_2 NUMBER(13,4), BOOL_PROP_1 VARCHAR2(1), BOOL_PROP_2 VARCHAR2(1), PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));
DROP TABLE QRTZ_TRIGGERS;
CREATE TABLE QRTZ_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, JOB_NAME VARCHAR2(200) NOT NULL, JOB_GROUP VARCHAR2(200) NOT NULL, DESCRIPTION VARCHAR2(250), NEXT_FIRE_TIME NUMBER(18), PREV_FIRE_TIME NUMBER(18), PRIORITY INTEGER, TRIGGER_STATE VARCHAR2(16) NOT NULL, TRIGGER_TYPE VARCHAR2(8) NOT NULL, START_TIME NUMBER(18) NOT NULL, END_TIME NUMBER(18), CALENDAR_NAME VARCHAR2(200), MISFIRE_INSTR NUMBER(2), JOB_DATA BLOB, PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));
DROP TABLE QRTZ_TRIGGER_GROUP;
CREATE TABLE QRTZ_TRIGGER_GROUP (ID NUMBER(18) NOT NULL, APP_NAME VARCHAR2(64) NOT NULL, TITLE VARCHAR2(512) NOT NULL, QORDER NUMBER(4) DEFAULT '0'   NOT NULL, ADDRESS_TYPE NUMBER(4) DEFAULT '0'   NOT NULL, ADDRESS_LIST VARCHAR2(512) DEFAULT '0', PRIMARY KEY (ID));
DROP TABLE QRTZ_TRIGGER_INFO;
CREATE TABLE QRTZ_TRIGGER_INFO (ID NUMBER(18) NOT NULL, JOB_GROUP NUMBER(18) NOT NULL, JOB_CRON VARCHAR2(128) NOT NULL, JOB_DESC VARCHAR2(255) NOT NULL, ADD_TIME DATE, UPDATE_TIME DATE, AUTHOR VARCHAR2(64) DEFAULT NULL , ALARM_EMAIL VARCHAR2(255) DEFAULT NULL , EXECUTOR_ROUTE_STRATEGY VARCHAR2(50) DEFAULT NULL , EXECUTOR_HANDLER VARCHAR2(255) DEFAULT NULL , EXECUTOR_PARAM VARCHAR2(512) DEFAULT NULL , EXECUTOR_BLOCK_STRATEGY VARCHAR2(50) DEFAULT NULL , EXECUTOR_FAIL_STRATEGY VARCHAR2(50) DEFAULT NULL , GLUE_TYPE VARCHAR2(50) NOT NULL, GLUE_SOURCE VARCHAR2(255), GLUE_REMARK VARCHAR2(128) DEFAULT NULL , GLUE_UPDATETIME DATE DEFAULT NULL , CHILD_JOBID VARCHAR2(255) DEFAULT NULL , PRIMARY KEY (ID));
DROP TABLE QRTZ_TRIGGER_LOG;
CREATE TABLE QRTZ_TRIGGER_LOG (ID NUMBER(18) NOT NULL, JOB_GROUP NUMBER(18) NOT NULL, JOB_ID NUMBER(18) NOT NULL, GLUE_TYPE VARCHAR2(50) DEFAULT NULL , EXECUTOR_ADDRESS VARCHAR2(255) DEFAULT NULL , EXECUTOR_HANDLER VARCHAR2(255) DEFAULT NULL , EXECUTOR_PARAM VARCHAR2(512) DEFAULT NULL , TRIGGER_TIME DATE DEFAULT NULL , TRIGGER_CODE VARCHAR2(255) DEFAULT '0'   NOT NULL, TRIGGER_MSG VARCHAR2(2048) DEFAULT NULL , HANDLE_TIME DATE DEFAULT NULL , HANDLE_CODE VARCHAR2(255) DEFAULT '0'   NOT NULL, HANDLE_MSG VARCHAR2(2048) DEFAULT NULL , PRIMARY KEY (ID));
DROP TABLE QRTZ_TRIGGER_LOGGLUE;
CREATE TABLE QRTZ_TRIGGER_LOGGLUE (ID NUMBER(18) NOT NULL, JOB_ID NUMBER(18) NOT NULL, GLUE_TYPE VARCHAR2(50) DEFAULT NULL , GLUE_SOURCE VARCHAR2(255), GLUE_REMARK VARCHAR2(128) NOT NULL, ADD_TIME TIMESTAMP(6) DEFAULT NULL , UPDATE_TIME TIMESTAMP(6) DEFAULT NULL , PRIMARY KEY (ID));
DROP TABLE QRTZ_TRIGGER_REGISTRY;
CREATE TABLE QRTZ_TRIGGER_REGISTRY (ID NUMBER(18) NOT NULL, REGISTRY_GROUP VARCHAR2(255) NOT NULL, REGISTRY_KEY VARCHAR2(255) NOT NULL, REGISTRY_VALUE VARCHAR2(255) NOT NULL, UPDATE_TIME TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP   NOT NULL, PRIMARY KEY (ID));
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
ALTER TABLE QRTZ_CRON_TRIGGERS ADD FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
ALTER TABLE QRTZ_TRIGGERS ADD FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP);
DROP SEQUENCE XXL_JOB_SEQ;
CREATE SEQUENCE XXL_JOB_SEQ INCREMENT BY 1 START WITH 61 MAXVALUE 999999999 MINVALUE 1 NOCYCLE CACHE 20 NOORDER;
